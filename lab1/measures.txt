#define WARMUP_NUM 10
#define MEASURE_NUM 100

#define ROWS_NUM 700
#define COLUMNS_NUM 500

#define RAND_LEFT -1000
#define RAND_RIGHT 1000

std::srand(61771);

g++ lab1.cpp -O0
lab1.cpp:
    используются дин. массивы даблов
    без проверки unlikely на 0: 15.238 seconds
    с проверкой на 0 unlikely: 13.743 seconds
    + сделать в циклах изменения сразу 8 значений: 12.502 seconds
    
g++ lab1_openmp.cpp -O0 -fopenmp
lab1_openmp.cpp:
    используются дин. массивы даблов + OpenMP
    без проверки unlikely на 0: 5.70601 seconds
    с проверкой на 0 unlikely: 5.59823 seconds
    + сделать в циклах изменения сразу 8 значений: 5.28766 seconds
        
g++ lab1_vctz.cpp -O0
lab1_vctz.cpp:
    используются дин. массивы даблов + векторизация
    без проверки unlikely на 0: 15.125 seconds
    с проверкой на 0 unlikely: 13.599 seconds
    + сделать в циклах изменения сразу 8 значений: 12.452 seconds

g++ lab1_vctz_openmp.cpp -O0 -fopenmp
lab1_vctz_openmp.cpp:
    используются дин. массивы даблов + OpenMP + векторизация в вычитании векторов
    без проверки unlikely на 0: 5.4238 seconds
    с проверкой на 0 unlikely: 5.461 seconds
    + сделать в циклах изменения сразу 8 значений: 5.272 seconds
        
g++ no_func.cpp -O0 -fopenmp
no_func.cpp:
    используются дин. массивы даблов + OpenMP + нет функции
    с проверкой на 0 unlikely + сделать в циклах изменения сразу 8 значений: 3.644 seconds
        
g++ vctz_no_func.cpp -O0 -fopenmp
vctz_no_func.cpp:
    используются дин. массивы даблов + OpenMP + нет функции + векторизация
    с проверкой на 0 unlikely + сделать в циклах изменения сразу 8 значений: 3.622 seconds
        //========================= double векторы из STL =========================\\
По первым тестам он показал себя очень не очень, поэтому работаем только с даблами
        
g++ lab1_vector.cpp -O0
lab1_vector.cpp:
    используются double векторы из STL
    без проверки на 0: 
        - без приведения к единице в начале: 34.1358 seconds
        - с ним: 34.2078 seconds
    с проверкой на 0:
        - без приведения к единице в начале: 34.3227 seconds
        - с ним: 34.1777 seconds
    с проверкой на 0 unlikely:
        - без приведения к единице в начале: 34.4911 seconds
        - с ним: 34.4775
    сделать в циклах изменения сразу 8 значений:
        - без проверок: 32.796 seconds
        
g++ lab1_vector_openmp.cpp -O0 -fopenmp
lab1_vector_openmp.cpp:
    используются double векторы из STL + OpenMP
    без проверки на 0: 
        - без приведения к единице в начале: 7.66209 seconds
        - с ним: 7.73509 seconds
    с проверкой на 0:
        - без приведения к единице в начале: 7.66014 seconds
        - с ним: 7.67245 seconds
    с проверкой на 0 unlikely:
        - без приведения к единице в начале: 7.67571 seconds
        - с ним: 7.61245 seconds
    сделать в циклах изменения сразу 8 значений:
        - без проверок: 7.49501