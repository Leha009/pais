#define WARMUP_NUM 10
#define MEASURE_NUM 100

#define ROWS_NUM 700
#define COLUMNS_NUM 500

#define RAND_LEFT -1000
#define RAND_RIGHT 1000

std::srand(61771);

perf stat ./a_out

g++ lab1.cpp -O0
clang++ lab1.cpp -O0
lab1.cpp:
    используются дин. массивы даблов
    без проверки unlikely на 0: 13.3109 seconds
    instructions: 326 305 306 192
    clang: 13.5008 seconds
    instructions: 311 897 300 646

    с проверкой на 0 unlikely: 13.3613 seconds
    instructions: 326 308 389 760
    clang: 13.4933 seconds
    instructions: 311 901 475 696

    + сделать в циклах изменения сразу 8 значений: 12.4306 seconds
    instructions: 316 425 869 689
    clang: 12.7807 seconds
    instructions: 303 716 120 353
    
g++ lab1_openmp.cpp -O0 -fopenmp
clang++ lab1_openmp.cpp -O0 -fopenmp
lab1_openmp.cpp:
    используются дин. массивы даблов + OpenMP
    без проверки unlikely на 0: 2.92586 seconds
    instructions: 327 934 736 578
    clang: 3.05689 seconds
    instructions: 335 389 870 897

    с проверкой на 0 unlikely: 2.90284 seconds
    instructions: 327 777 599 865
    clang: 2.84331 seconds
    instructions: 334 392 019 305

    + сделать в циклах изменения сразу 8 значений: 2.55635 seconds
    instructions: 317 622 784 880
    clang: 2.66892 seconds
    instructions: 324 272 625 344
        
g++ no_func.cpp -O0 -fopenmp
clang++ no_func.cpp -O0 -fopenmp
no_func.cpp:
    используются дин. массивы даблов + OpenMP + нет функции
    с проверкой на 0 unlikely + сделать в циклах изменения сразу 8 значений: 2.27947 seconds
    instructions: 318 478 054 980
    clang: 2.15132 seconds
    instructions: 267 462 921 635
        
g++ lab1_vctz_openmp.cpp -O0 -fopenmp НЕ УЧИТЫВАЕТСЯ В ОТЧЕТЕ
clang++ lab1_vctz_openmp.cpp -O0 -fopenmp
lab1_vctz_openmp.cpp:
    используются дин. массивы даблов + OpenMP + векторизация OpenMP в вычитании векторов
    + сделать в циклах изменения сразу 8 значений: 2.5165 seconds
    instructions: 314 534 748 581
    clang: 2.64615 seconds
    instructions: 333 011 155 919
        
g++ vctz_no_func.cpp -O0 -fopenmp
clang++ vctz_no_func.cpp -O0 -fopenmp
vctz_no_func.cpp:
    используются дин. массивы даблов + OpenMP + нет функции + векторизация OpenMP
    с проверкой на 0 unlikely + сделать в циклах изменения сразу 8 значений: 2.28031 seconds
    instructions: 315 278 568 877
    clang: 2.17637 seconds
    instructions: 275 148 538 411

        //========================= double векторы из STL =========================\\
По первым тестам он показал себя очень не очень, поэтому работаем только с даблами
        
g++ lab1_vector.cpp -O0
lab1_vector.cpp:
    используются double векторы из STL
    без проверки на 0: 
        - без приведения к единице в начале: 34.1358 seconds
        - с ним: 34.2078 seconds
    с проверкой на 0:
        - без приведения к единице в начале: 34.3227 seconds
        - с ним: 34.1777 seconds
    с проверкой на 0 unlikely:
        - без приведения к единице в начале: 34.4911 seconds
        - с ним: 34.4775
    сделать в циклах изменения сразу 8 значений:
        - без проверок: 32.796 seconds
        
g++ lab1_vector_openmp.cpp -O0 -fopenmp
lab1_vector_openmp.cpp:
    используются double векторы из STL + OpenMP
    без проверки на 0: 
        - без приведения к единице в начале: 7.66209 seconds
        - с ним: 7.73509 seconds
    с проверкой на 0:
        - без приведения к единице в начале: 7.66014 seconds
        - с ним: 7.67245 seconds
    с проверкой на 0 unlikely:
        - без приведения к единице в начале: 7.67571 seconds
        - с ним: 7.61245 seconds
    сделать в циклах изменения сразу 8 значений:
        - без проверок: 7.49501